#!/usr/bin/env bash

set -eo pipefail

readonly TOPLEVEL=$(git rev-parse --show-toplevel)
readonly CONF_FILE="${TOPLEVEL}/.git_deploy_conf"
readonly REPO_NAME=$(basename "${TOPLEVEL}")
readonly GIT_ROOT=".git_deploy"
readonly REPO_PATH="${GIT_ROOT}/${REPO_NAME}.git"
readonly HOOK="${REPO_PATH}/hooks/pre-receive"

if [[ -f "${CONF_FILE}" ]]; then
  echo "Loading configuration from ${CONF_FILE}"
  source "${CONF_FILE}"
fi

init_remote() {
  # Create remote repository
  ssh "${SERVER}" <<DOC
if [[ ! -d ~/${REPO_PATH} ]]; then
  mkdir -p ~/${REPO_PATH}
  cd ~/${REPO_PATH}
  git init --bare
  git --bare update-server-info
  touch ~/${HOOK}
  chmod +x ~/${HOOK}
fi
DOC

  # Add/update pre-receive hook
  ssh "${SERVER}" "cat > ~/${HOOK}" <<DOC
#!/bin/sh
while read old new refname; do
  build_dir=.build/\${new}
  mkdir -p \${build_dir}
  git archive \${new} | tar -x -C \${build_dir}
  cd \${build_dir}
  make git-deploy || exit 1
done
DOC

  git remote add "${SERVER}" "${SERVER}:${REPO_PATH}"
}

post_deploy() {
  if [[ -n "${GIT_DEPLOY_SUCCESS}" ]]; then
    "${GIT_DEPLOY_SUCCESS}"
  fi
}

SERVER=${1:-${GIT_DEPLOY_SERVER}}

if [[ -z "${SERVER}" ]]; then
  echo ""
  echo "=== git-deploy v1.1.0 ==="
  echo "usage: git deploy [user@]<server>"
  echo "   ex: git deploy bob@prod.server.com"
  echo ""
  exit 1
fi

if ! git remote get-url "${SERVER}" &> /dev/null; then
  echo "Checking remote repository"
  init_remote
fi

echo "Pushing to ${SERVER}"
git push "${SERVER}" master && post_deploy

exit 0